add_library(BenchmarkHelper.h INTERFACE)

add_compile_definitions(ASSERT_INPUT_PARAMS)

add_executable(UtilsTests UtilsTests.cpp)
target_compile_features(UtilsTests PUBLIC cxx_std_17)
add_executable(StringUtilsTests StringUtilsTests.cpp)
target_compile_features(StringUtilsTests PUBLIC cxx_std_17)
add_executable(AnglesTests AnglesTests.cpp)
target_compile_features(AnglesTests PUBLIC cxx_std_17)
add_executable(BugerLambertTests BugerLambertTests.cpp)
target_compile_features(BugerLambertTests PUBLIC cxx_std_17)
add_executable(ReflectanceTests ReflectanceTests.cpp)
target_compile_features(ReflectanceTests PUBLIC cxx_std_17)
add_executable(MediumInterfaceTests MediumInterfaceTests.cpp)
target_compile_features(MediumInterfaceTests PUBLIC cxx_std_17)
add_executable(MediumGlassTests MediumGlassTests.cpp)
target_compile_features(MediumGlassTests PUBLIC cxx_std_17)
add_executable(MediumConstantTests MediumConstantTests.cpp)
target_compile_features(MediumConstantTests PUBLIC cxx_std_17)
add_executable(MediumLinearTests MediumLinearTests.cpp)
target_compile_features(MediumLinearTests PUBLIC cxx_std_17)
add_executable(MediumArbitraryTests MediumArbitraryTests.cpp)
target_compile_features(MediumArbitraryTests PUBLIC cxx_std_17)
add_executable(MediumUtilsTests MediumUtilsTests.cpp)
target_compile_features(MediumUtilsTests PUBLIC cxx_std_17)
add_executable(MediumFactoryTests MediumFactoryTests.cpp)
target_compile_features(MediumFactoryTests PUBLIC cxx_std_17)
add_executable(LayerTests LayerTests.cpp)
target_compile_features(LayerTests PUBLIC cxx_std_17)
add_executable(SpecimenTests SpecimenTests.cpp)
target_compile_features(SpecimenTests PUBLIC cxx_std_17)
add_executable(Mesh3Tests Mesh3Tests.cpp)
target_compile_features(Mesh3Tests PUBLIC cxx_std_17)
add_executable(DetectorFactoryTests DetectorFactoryTests.cpp)
target_compile_features(DetectorFactoryTests PUBLIC cxx_std_17)
add_executable(DetectorInterfaceTests DetectorInterfaceTests.cpp)
target_compile_features(DetectorInterfaceTests PUBLIC cxx_std_17)
add_executable(DetectorUtilsTests DetectorUtilsTests.cpp)
target_compile_features(DetectorUtilsTests PUBLIC cxx_std_17)
add_executable(FullAbsorberTests FullAbsorberTests.cpp)
target_compile_features(FullAbsorberTests PUBLIC cxx_std_17)
add_executable(IntegratingSphereComplexTests IntegratingSphereComplexTests.cpp)
target_compile_features(IntegratingSphereComplexTests PUBLIC cxx_std_17)
add_executable(IntegratingSphereSimpleTests IntegratingSphereSimpleTests.cpp)
target_compile_features(IntegratingSphereSimpleTests PUBLIC cxx_std_17)
add_executable(OpticalFiberTests OpticalFiberTests.cpp)
target_compile_features(OpticalFiberTests PUBLIC cxx_std_17)
add_executable(SettingsExporterLayerTests SettingsExporterLayerTests.cpp)
target_compile_features(SettingsExporterLayerTests PUBLIC cxx_std_17)
add_executable(SettingsExporterMediumTests SettingsExporterMediumTests.cpp)
target_compile_features(SettingsExporterMediumTests PUBLIC cxx_std_17)
add_executable(SettingsExporterSampleTests SettingsExporterSampleTests.cpp)
target_compile_features(SettingsExporterSampleTests PUBLIC cxx_std_17)
add_executable(SettingsImporterErrorsTests SettingsImporterErrorsTests.cpp)
target_compile_features(SettingsImporterErrorsTests PUBLIC cxx_std_17)
add_executable(SettingsImporterLayerTests SettingsImporterLayerTests.cpp)
target_compile_features(SettingsImporterLayerTests PUBLIC cxx_std_17)
add_executable(SettingsImporterMediumTests SettingsImporterMediumTests.cpp)
target_compile_features(SettingsImporterMediumTests PUBLIC cxx_std_17)
add_executable(SettingsImporterSampleTests SettingsImporterSampleTests.cpp)
target_compile_features(SettingsImporterSampleTests PUBLIC cxx_std_17)
add_executable(ADTests ADTests.cpp)
target_compile_features(ADTests PUBLIC cxx_std_17)
add_executable(IADTests IADTests.cpp)
target_compile_features(IADTests PUBLIC cxx_std_17)
add_executable(MCTests MCTests.cpp)
target_compile_features(MCTests PUBLIC cxx_std_17)

file(GLOB sources ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
add_executable(unit_tests ${sources})
#add_executable(unit_tests main.cpp)
target_compile_features(unit_tests PUBLIC cxx_std_17)

set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)
target_link_libraries(UtilsTests PRIVATE gtest_main)
target_link_libraries(StringUtilsTests PRIVATE gtest_main)
target_link_libraries(AnglesTests PRIVATE gtest_main)
target_link_libraries(BugerLambertTests PRIVATE gtest_main)
target_link_libraries(ReflectanceTests PRIVATE gtest_main)
target_link_libraries(MediumInterfaceTests PRIVATE gtest_main)
target_link_libraries(MediumGlassTests PRIVATE gtest_main)
target_link_libraries(MediumConstantTests PRIVATE gtest_main)
target_link_libraries(MediumLinearTests PRIVATE gtest_main)
target_link_libraries(MediumArbitraryTests PRIVATE gtest_main)
target_link_libraries(MediumUtilsTests PRIVATE gtest_main)
target_link_libraries(MediumFactoryTests PRIVATE gtest_main)
target_link_libraries(LayerTests PRIVATE gtest_main)
target_link_libraries(SpecimenTests PRIVATE gtest_main)
target_link_libraries(Mesh3Tests PRIVATE gtest_main)
target_link_libraries(DetectorFactoryTests PRIVATE gtest_main)
target_link_libraries(DetectorInterfaceTests PRIVATE gtest_main)
target_link_libraries(DetectorUtilsTests PRIVATE gtest_main)
target_link_libraries(FullAbsorberTests PRIVATE gtest_main)
target_link_libraries(IntegratingSphereComplexTests PRIVATE gtest_main)
target_link_libraries(IntegratingSphereSimpleTests PRIVATE gtest_main)
target_link_libraries(OpticalFiberTests PRIVATE gtest_main)
target_link_libraries(SettingsExporterLayerTests PRIVATE gtest_main yaml-cpp)
target_link_libraries(SettingsExporterMediumTests PRIVATE gtest_main yaml-cpp)
target_link_libraries(SettingsExporterSampleTests PRIVATE gtest_main yaml-cpp)
target_link_libraries(SettingsImporterErrorsTests PRIVATE gtest_main yaml-cpp)
target_link_libraries(SettingsImporterLayerTests PRIVATE gtest_main yaml-cpp)
target_link_libraries(SettingsImporterMediumTests PRIVATE gtest_main yaml-cpp)
target_link_libraries(SettingsImporterSampleTests PRIVATE gtest_main yaml-cpp)
target_link_libraries(ADTests PRIVATE gtest_main)
target_link_libraries(IADTests PRIVATE gtest_main)
target_link_libraries(MCTests PRIVATE gtest_main)

target_link_libraries(unit_tests PRIVATE gtest_main yaml-cpp Threads::Threads)

add_test(NAME unit_tests COMMAND unit_tests)
